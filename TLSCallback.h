#pragma once
#include "windows.h"
#include "AntiDebug.h"

BOOL isDebugged = FALSE;
unsigned char opcodes[] = { 0xab,0x01,0x00,0x00,0x00,0x00,0xcd,0x00,0xc8,0x01,0x00,0xcd,0x00,0x73,0x00,0x08,0x60,0x01,0x00,0xcd,0x00,0x73,0x00,0x10,0xb0,0x01,0x00,0xcd,0x00,0x73,0x00,0x18,0xa6,0x01,0x00,0xab,0x02,0x4b,0x41,0x46,0x7b,0xff,0x01,0x02,0xab,0x00,0xef,0xbe,0xad,0xde,0xab,0x02,0x00,0x00,0x00,0x00,0xcd,0x01,0x76,0x02,0x01,0xcd,0x01,0x73,0x01,0x08,0xec,0x02,0x01,0xcd,0x01,0x73,0x01,0x10,0x3a,0x02,0x01,0xcd,0x01,0x73,0x01,0x18,0x27,0x02,0x01,0x85,0x00,0x02,0xab,0x01,0xa1,0xd1,0xfa,0x81,0xff,0x00,0x01,0xcd,0x02,0x10,0x73,0x02,0x10,0xab,0x01,0x00,0x50,0xf0,0x7d,0xff,0x01,0x02,0xab,0x00,0x00,0x00,0x00,0x00,0xcd,0x01,0xd9,0x00,0x01,0xcd,0x01,0x73,0x01,0x08,0x53,0x00,0x01,0xcd,0x01,0x73,0x01,0x10,0x0b,0x00,0x01,0xcd,0x01,0x73,0x01,0x18,0xa6,0x00,0x01,0x54,0x00,0x02,0xab,0x02,0x72,0x09,0xaf,0x7d,0x0d,0x00,0x01,0xff,0x02,0x00,0xab,0x01,0x00,0x00,0x00,0x00,0xcd,0x00,0x54,0x01,0x00,0xcd,0x00,0x73,0x00,0x08,0x7d,0x01,0x00,0xcd,0x00,0x73,0x00,0x10,0x12,0x01,0x00,0xcd,0x00,0x73,0x00,0x18,0x22,0x01,0x00,0xab,0x02,0x9a,0xb1,0xfa,0x92,0x73,0x01,0x13,0xff,0x01,0x02,0xab,0x00,0x00,0x00,0x00,0x00,0xcd,0x01,0x8d,0x00,0x01,0xcd,0x01,0x73,0x01,0x08,0xf8,0x00,0x01,0xcd,0x01,0x73,0x01,0x10,0xd0,0x00,0x01,0xcd,0x01,0x73,0x01,0x18,0xbc,0x00,0x01,0xab,0x02,0x83,0x00,0x00,0x00,0x10,0x26,0x00,0x02,0xab,0x01,0xb6,0x13,0xac,0xe3,0xff,0x00,0x01,0xab,0x01,0x00,0x00,0x00,0x00,0xcd,0x02,0xc4,0x01,0x02,0xcd,0x02,0x73,0x02,0x08,0x33,0x01,0x02,0xcd,0x02,0x73,0x02,0x10,0x1a,0x01,0x02,0xcd,0x02,0x73,0x02,0x18,0x71,0x01,0x02,0xab,0x02,0xe9,0x40,0xcf,0x91,0x87,0x00,0x01,0xff,0x00,0x02,0xab,0x00,0x00,0x00,0x00,0x00,0xcd,0x01,0x41,0x00,0x01,0xcd,0x01,0x73,0x01,0x08,0xbc,0x00,0x01,0xcd,0x01,0x73,0x01,0x10,0xd4,0x00,0x01,0xcd,0x01,0x73,0x01,0x18,0xef,0x00,0x01,0xab,0x01,0x82,0xa8,0xc6,0x90,0x73,0x00,0x01,0xff,0x00,0x01,0xcd,0x00,0xab,0x01,0x7d,0x00,0x00,0x00,0xff,0x01,0x00 };
unsigned char opcodesfake[] = { 0xab,0x02,0x00,0x00,0x00,0x00,0xcd,0x00,0xad,0x02,0x00,0xcd,0x00,0x73,0x00,0x08,0xdd,0x02,0x00,0xcd,0x00,0x73,0x00,0x10,0xfb,0x02,0x00,0xcd,0x00,0x73,0x00,0x18,0xcf,0x02,0x00,0xab,0x01,0x46,0x41,0x4b,0x7b,0xff,0x01,0x02,0xab,0x02,0x00,0x00,0x00,0x00,0xcd,0x00,0x0b,0x02,0x00,0xcd,0x00,0x73,0x00,0x08,0x3f,0x02,0x00,0xcd,0x00,0x73,0x00,0x10,0xbe,0x02,0x00,0xcd,0x00,0x73,0x00,0x18,0xc3,0x02,0x00,0xab,0x01,0x65,0x5f,0x6e,0x31,0xff,0x01,0x02,0xab,0x02,0x00,0x00,0x00,0x00,0xcd,0x00,0x5a,0x02,0x00,0xcd,0x00,0x73,0x00,0x08,0xf5,0x02,0x00,0xcd,0x00,0x73,0x00,0x10,0x00,0x02,0x00,0xcd,0x00,0x73,0x00,0x18,0xce,0x02,0x00,0xab,0x01,0x43,0x33,0x5f,0x59,0xff,0x01,0x02,0xab,0x02,0x00,0x00,0x00,0x00,0xcd,0x00,0x46,0x02,0x00,0xcd,0x00,0x73,0x00,0x08,0xf7,0x02,0x00,0xcd,0x00,0x73,0x00,0x10,0x33,0x02,0x00,0xcd,0x00,0x73,0x00,0x18,0x9d,0x02,0x00,0xab,0x01,0x6f,0x55,0x5f,0x41,0xff,0x01,0x02,0xab,0x02,0x00,0x00,0x00,0x00,0xcd,0x00,0x25,0x02,0x00,0xcd,0x00,0x73,0x00,0x08,0x96,0x02,0x00,0xcd,0x00,0x73,0x00,0x10,0x87,0x02,0x00,0xcd,0x00,0x73,0x00,0x18,0xad,0x02,0x00,0xab,0x01,0x72,0x33,0x5f,0x54,0xff,0x01,0x02,0xab,0x02,0x00,0x00,0x00,0x00,0xcd,0x00,0x28,0x02,0x00,0xcd,0x00,0x73,0x00,0x08,0xa0,0x02,0x00,0xcd,0x00,0x73,0x00,0x10,0x7a,0x02,0x00,0xcd,0x00,0x73,0x00,0x18,0x8f,0x02,0x00,0xab,0x01,0x72,0x75,0x33,0x5f,0xff,0x01,0x02,0xab,0x02,0x00,0x00,0x00,0x00,0xcd,0x00,0x4e,0x02,0x00,0xcd,0x00,0x73,0x00,0x08,0xc0,0x02,0x00,0xcd,0x00,0x73,0x00,0x10,0xdb,0x02,0x00,0xcd,0x00,0x73,0x00,0x18,0xf5,0x02,0x00,0xab,0x01,0x48,0x61,0x78,0x30,0xff,0x01,0x02,0xab,0x01,0x00,0x00,0x00,0x00,0xcd,0x02,0x04,0x01,0x02,0xcd,0x02,0x73,0x02,0x08,0xc5,0x01,0x02,0xab,0x02,0x72,0x7d,0x00,0x00,0xff,0x01,0x02,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10 };

VOID NTAPI test_tls_callback(
	PVOID DllHandle,
	DWORD Reason,
	PVOID Reserved)
{
	if (Reason != DLL_PROCESS_ATTACH)
	{
		return;
	}

#ifndef _DEBUG
	EnumWindows(&EnumWindowsAntiDebug, reinterpret_cast<LPARAM>(&isDebugged));
	if (isDebugged)
	{
		memcpy(opcodes, opcodesfake, sizeof(opcodes));
	}
#endif // !DEBUG
}

#pragma comment (linker, "/INCLUDE:__tls_used")
#pragma comment (linker, "/INCLUDE:_p_tls_callback1")
#pragma data_seg(push)
#pragma data_seg(".CRT$XLAAA")
EXTERN_C PIMAGE_TLS_CALLBACK p_tls_callback1 = test_tls_callback;